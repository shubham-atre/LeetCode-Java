public class Solution {
public boolean searchMatrix(int[][] matrix, int target) {
    int row = matrix.length-1;
    int col = matrix[0].length-1;
    if(recurSearch(matrix, 0, 0, row, col, target))
        return true;
    else 
        return false;
}
public boolean recurSearch(int[][] matrix, int x1, int y1, int x2, int y2, int target){
    if(x2 < x1 || y2 < y1){
        return false;
    }
    if(target < matrix[x1][y1]){
        return false;
    }
    if(target > matrix[x2][y2]){
        return false;
    }
    if(matrix[x1][y1] == target){
        return true;
    }
    else{
        int xmid = (x1 + x2) / 2;
        int ymid = (y1 + y2) / 2;
        if(target < matrix[xmid][ymid]){
            if(recurSearch(matrix, x1, y1, x2, ymid -1, target))
                return true;
            if(recurSearch(matrix, x1, ymid, xmid -1, y2, target))
                return true;
        }
        else if (target == matrix[xmid][ymid]){
            return true;
        }
        else{
            if(recurSearch(matrix, xmid+1, y1, x2, ymid, target))
                return true;
            if(recurSearch(matrix, x1, ymid+1, x2, y2, target))
                return true;
        }
        return false;
    }
}
}

class Solution {
    public int minPathSum(int[][] grid) {
        int r =grid.length;
        int c = grid[0].length;
        int[][] dp = new int[r][c];
        
        for(int i=0; i < c; i++){
            dp[0][i] = grid[0][i] ;
        }
        
        for(int i=0; i < r; i++){
            dp[i][0] = grid[i][0];
        }
        for(int i=1; i < c; i++){
            dp[0][i] = dp[0][i-1] + dp[0][i];
        }
        
        for(int i=1; i < r; i++){
            dp[i][0] = dp[i-1][0] + dp[i][0];
        }
        
        for(int row=1;row<r;row++){
            for(int col=1;col<c;col++){
                dp[row][col] = grid[row][col] + Math.min(dp[row-1][col], dp[row][col-1]);
            }
        }
        
        return dp[r-1][c-1];
        
    }
}

//inplace
class Solution {
    public int minPathSum(int[][] grid) {
        int r =grid.length;
        int c = grid[0].length;
        for(int i=1; i < c; i++){
            grid[0][i] = grid[0][i-1] + grid[0][i];
        }
        
        for(int i=1; i < r; i++){
            grid[i][0] = grid[i-1][0] + grid[i][0];
        }
        
        for(int row=1;row<r;row++){
            for(int col=1;col<c;col++){
                grid[row][col] = grid[row][col] + Math.min(grid[row-1][col], grid[row][col-1]);
            }
        }
        
        return grid[r-1][c-1];
        
    }
}

//recurssive O(N) time, O(h) space for both solns
public int maxDepth(TreeNode root) 
    {
        if(root == null)
            return 0;
        else
            return 1 + Math.max(maxDepth(root.left), maxDepth(root.right));
    }

//iterative
class Solution
{
    public int maxDepth(TreeNode root)
    {
        Queue<TreeNode> q = new ArrayDeque<>();
        int depth = 0;
        
        if(root != null)
            q.add(root);
        
        while(!q.isEmpty())
        {
            depth++;
            
            for(int count = q.size(); count > 0; count--)
            {
                TreeNode current = q.poll();
                
                if(current.left != null)
                    q.add(current.left);
                if(current.right != null)
                    q.add(current.right);
            }
        }
        return depth;
    }
}

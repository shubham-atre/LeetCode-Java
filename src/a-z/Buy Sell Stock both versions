//O(N)
class Solution {
    public int maxProfit(int[] prices) {
        
        if(prices.length < 2)
            return 0;
        
        int min = prices[0];
               
        int max = Integer.MIN_VALUE;
        
        for(int i:prices)
        {
            if(i<min)
                min=i;
            max = Math.max(max, i-min);
        }
        
        return max;
        
    }
}


//can buy multiple times O(N)
public int maxProfit(int[] prices) {
        
        int len = prices.length;
        if(len<1)
            return 0;
        
        int buy = prices[0];
        int total = 0;
        
        for(int i=1;i<len;i++)
        {
            
            if(prices[i]<prices[i-1])
            {
                total+=prices[i-1]-buy;
                buy=prices[i];           
            }
                
        }
        
        
        total+=prices[len-1]-buy;
            
        
        return total;
    }

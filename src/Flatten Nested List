public class NestedIterator implements Iterator<Integer> {
    public Stack<NestedInteger> stack = new Stack<>();
    
    public NestedIterator(List<NestedInteger> nestedList) {
        for (int i = nestedList.size() - 1; i >= 0; i--) {
            stack.push(nestedList.get(i));
        }
    }

    @Override
    public Integer next() {
        return stack.pop().getInteger();
    }

    @Override
    public boolean hasNext() {
        if (stack.isEmpty()) {
            return false;
        }
        
        NestedInteger nestedInteger = stack.peek();
        if (nestedInteger.isInteger()) { //Head is integer
            return true;
        }
        stack.pop(); //Head is list, we're breaking it down.
        for (int i = nestedInteger.getList().size() - 1; i >= 0; i--) {
            stack.push(nestedInteger.getList().get(i));
        }
        
        return hasNext();
    }
}
